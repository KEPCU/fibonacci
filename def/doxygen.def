AutoGen Definitions dummy;
class = {
  cp-id     = 'class_fibonacci';
  cp-name   = 'Fibonacci';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_iterative_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_logarithmic_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_memory_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_recursive_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_fibonacci_1ae991598d39abf5a5a72e00eaf36e9067';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Fibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '20';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary> Contructor for define Number property </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<param name="number">upper limit of fibonacci to find</param> 
summary> Default constructor </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1af7ee7a59e8062e7bd290348227d181a8';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'Number';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_fibonacci_1a828d888ab8276b80a74a0f749b80ea61';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Fibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'property';
    sec-member = {
      sec-mem-kind = 'property';
      sec-mem-id   = 'class_fibonacci_1af7ee7a59e8062e7bd290348227d181a8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Number';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary> 
Upper limit of the fibonacci to be found with GetFibonacci 
 /summary>
 remarks>
0 default value
 /remarks>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
summary> Time in which the fibonacci is found </summary> 
remarks>Float MinValue default value</remarks>
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1ae991598d39abf5a5a72e00eaf36e9067';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'Fibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1ae2558b30d8cb17c56ba53cf2291c58e1';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'IterativeFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a6d7071da57204730de6ddd10778d7377';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'RecursiveFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a7076718f8f868dd77c2d2d132f0ef9bb';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'MemoryFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1af08cfd64a2c71e7492d9e6d8e06dad87';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'LogarithmicFibonacci::GetFibonacci';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'property';
      sec-mem-id   = 'class_fibonacci_1a699518128f5bc58d32a5331ed7bc7054';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Time';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= float.MinValue
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1ae2558b30d8cb17c56ba53cf2291c58e1';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'IterativeFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a6d7071da57204730de6ddd10778d7377';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'RecursiveFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a7076718f8f868dd77c2d2d132f0ef9bb';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'MemoryFibonacci::GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1af08cfd64a2c71e7492d9e6d8e06dad87';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'LogarithmicFibonacci::GetFibonacci';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  cp-fileline  = '6';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 Base class for Fibonacci Iterative, Recursive, Memory and Logarithmic  <br>
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'IterativeFibonacci';
        node-link = {
          node-link-id = 'class_iterative_fibonacci';
        };
        node-child = {
          child-id = '1';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'LogarithmicFibonacci';
        node-link = {
          node-link-id = 'class_logarithmic_fibonacci';
        };
        node-child = {
          child-id = '1';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'MemoryFibonacci';
        node-link = {
          node-link-id = 'class_memory_fibonacci';
        };
        node-child = {
          child-id = '1';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'RecursiveFibonacci';
        node-link = {
          node-link-id = 'class_recursive_fibonacci';
        };
        node-child = {
          child-id = '1';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_iterative_fibonacci';
  cp-name   = 'IterativeFibonacci';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'class_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_iterative_fibonacci_1a5444cc36563bd543591fd4e8c35ee44c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'IterativeFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Contructor for define Number property </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>Using Fibonacci Class contructor</remarks>
<param name="number">upper limit of fibonacci to find</param> 
summary> Default constructor </summary>
        <remarks>Using Fibonacci Class contructor</remarks> 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_iterative_fibonacci_1a5e2013f7d5d56a7efc7657dc41b1fa12';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'IterativeFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_iterative_fibonacci_1ae2558b30d8cb17c56ba53cf2291c58e1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using FOR</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>The Time property is equal to the delay time.</remarks>
<returns> Fibonacci of Number </returns> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1af7ee7a59e8062e7bd290348227d181a8';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'Fibonacci::Number';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a699518128f5bc58d32a5331ed7bc7054';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'Fibonacci::Time';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  cp-fileline  = '31';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 The Fibonacci child class uses a loop to find the fibonacci.
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'IterativeFibonacci';
        node-link = {
          node-link-id = 'class_iterative_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'IterativeFibonacci';
        node-link = {
          node-link-id = 'class_iterative_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_logarithmic_fibonacci';
  cp-name   = 'LogarithmicFibonacci';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'class_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_logarithmic_fibonacci_1ae76ce25d8327af55c9c15a734fb8d373';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LogarithmicFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Contructor for define Number property </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>Using Fibonacci Class contructor</remarks>
<param name="number">upper limit of fibonacci to find</param> 
summary> Default constructor </summary>
        <remarks>Using Fibonacci Class contructor</remarks> 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_logarithmic_fibonacci_1af1a5b8d92dc18d9669728ea7945a6337';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LogarithmicFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_logarithmic_fibonacci_1af08cfd64a2c71e7492d9e6d8e06dad87';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using memory (Memory Property)</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>The Time property is equal to the delay time, use Memory(Dicctionary)</remarks>
<returns> Fibonacci of Number </returns> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1af7ee7a59e8062e7bd290348227d181a8';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'Fibonacci::Number';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a699518128f5bc58d32a5331ed7bc7054';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'Fibonacci::Time';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  cp-fileline  = '174';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 The Fibonacci child class uses matrix multiplication to find the fibonacci.
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'LogarithmicFibonacci';
        node-link = {
          node-link-id = 'class_logarithmic_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'LogarithmicFibonacci';
        node-link = {
          node-link-id = 'class_logarithmic_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_memory_fibonacci';
  cp-name   = 'MemoryFibonacci';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'class_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_memory_fibonacci_1a8a0670cccf42a10b7c59f6e27d0c3cf9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MemoryFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '123';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Contructor for define Number property </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>Using Fibonacci Class contructor</remarks>
<param name="number">upper limit of fibonacci to find</param> 
summary> Default constructor </summary>
        <remarks>Using Fibonacci Class contructor</remarks> 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_memory_fibonacci_1a8ce77590c1240a4014e6a09fda34204a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MemoryFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_memory_fibonacci_1af33a94ecf9808e1d9a29019bdee53662';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Pop';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary> Remove a item or element of Dictionary </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<param name="key"> Key to find the element to remove </param> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a9cbf1104397681255e42e0ff0070c933';
        sec-mem-ref-line = '118';
        sec-mem-ref-name = 'Memory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_memory_fibonacci_1a7076718f8f868dd77c2d2d132f0ef9bb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using memory (Memory Property)</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 <remarks>
The Time property is equal to the delay time, use Memory(Dicctionary)
 for save data found. Use other method.
 /remarks>
 <returns> Fibonacci of Number </returns> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a7076718f8f868dd77c2d2d132f0ef9bb';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'GetFibonacci';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1af7ee7a59e8062e7bd290348227d181a8';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'Fibonacci::Number';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a699518128f5bc58d32a5331ed7bc7054';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'Fibonacci::Time';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a7076718f8f868dd77c2d2d132f0ef9bb';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'GetFibonacci';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'property';
    sec-member = {
      sec-mem-kind = 'property';
      sec-mem-id   = 'class_memory_fibonacci_1a9cbf1104397681255e42e0ff0070c933';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Dictionary< int, Int64 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Memory';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= new Dictionary<int, Int64>()
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary> Data structure for storing the fibonacci already found </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a0f6e602c4dde94de01cc70d0818ffc6d';
        sec-mem-ref-line = '163';
        sec-mem-ref-name = 'GetFibonacci';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1af33a94ecf9808e1d9a29019bdee53662';
        sec-mem-ref-line = '130';
        sec-mem-ref-name = 'Pop';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_memory_fibonacci_1a0f6e602c4dde94de01cc70d0818ffc6d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using memory (Memory Property)</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 <remarks>
The Time property is equal to the delay time, use Memory(Dicctionary)
 for save data found. Use other method.
 /remarks>
 <param name="number">number of fibonacci to find</param>
 <returns> Fibonacci of Number </returns> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a7076718f8f868dd77c2d2d132f0ef9bb';
        sec-mem-ref-line = '141';
        sec-mem-ref-name = 'GetFibonacci';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a9cbf1104397681255e42e0ff0070c933';
        sec-mem-ref-line = '118';
        sec-mem-ref-name = 'Memory';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  cp-fileline  = '115';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 The Fibonacci child class uses a Dictionary as memory to find the 
fibonacci using the Dictionary to consume less time and resources.
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'MemoryFibonacci';
        node-link = {
          node-link-id = 'class_memory_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'MemoryFibonacci';
        node-link = {
          node-link-id = 'class_memory_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_program';
  cp-name   = 'Program';
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_program_1ada72f8d1518f89bc2e6ad807d5059564';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Main';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
string[]
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'args';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Program.cs';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_program_8cs_1aaaf4b7f2825ed5dadc79a6f8c97bff09';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'GetFibonacciAverage';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_program_1a2b30e6d082882ef66bb6fd7c3610b3bc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Program.cs';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>
Get fibonacci in a range from 0 to number, generate a csv file 
with the times of each type of fibonacci for each number between 0 to number. 
</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<param name="number">Upper limit of fibonacci to find</param>
<returns>Does not return anything, generates a csv file </returns> 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_program_1aaaf4b7f2825ed5dadc79a6f8c97bff09';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacciAverage';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'repetitions';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Program.cs';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>
Get average fibonacci in a range from 0 to number, generate a csv file 
with the times of each type of fibonacci for each number between 0 to number
</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>Are 20 repetitions to obtain a time average</remarks>
<param name="number">Upper limit of fibonacci to find</param>
<param name="repetitions">The number of test iterations for testing</param>
<returns>Does not return anything, generates a csv file </returns> 
summary>
        Function or method for testing and using fibonacci functions and creating a csv file
        </summary> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_program_8cs_1ada72f8d1518f89bc2e6ad807d5059564';
        sec-mem-ref-line = '140';
        sec-mem-ref-name = 'Main';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Program.cs';
  cp-fileline  = '6';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 Class for use the Class Fibonacci methods 
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'Program';
        node-link = {
          node-link-id = 'class_program';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_recursive_fibonacci';
  cp-name   = 'RecursiveFibonacci';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'class_fibonacci';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recursive_fibonacci_1a64a1216adafedddf25dade0d32c3cbff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RecursiveFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Contructor for define Number property </summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>Using Fibonacci Class contructor</remarks>
<param name="number">upper limit of fibonacci to find</param> 
summary> Default constructor </summary>
        remarks>Using Fibonacci Class contructor</remarks> 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recursive_fibonacci_1aa04c876b2d40b9e2e35ff06472996ada';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RecursiveFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recursive_fibonacci_1a6d7071da57204730de6ddd10778d7377';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using recusivity</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<remarks>The Time property is equal to the delay time, use other Method</remarks>
<returns> Fibonacci of Number </returns> 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a6d7071da57204730de6ddd10778d7377';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'GetFibonacci';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1af7ee7a59e8062e7bd290348227d181a8';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'Fibonacci::Number';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a699518128f5bc58d32a5331ed7bc7054';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'Fibonacci::Time';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_fibonacci_8cs_1a6d7071da57204730de6ddd10778d7377';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'GetFibonacci';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recursive_fibonacci_1afe509d2daeee698c8a017266573810a6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Int64[]
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'GetFibonacci';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Int64
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'number';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
<summary>Get fibonacci of Number Property using recusivity</summary>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<param name="number">number of fibonacci to find</param>
<returns> Fibonacci of Number </returns>     <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_fibonacci_8cs_1a6d7071da57204730de6ddd10778d7377';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'GetFibonacci';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  cp-fileline  = '69';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
<summary>
 The Fibonacci child class, uses a recursive loop to find the fibonacci
 </summary>
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'RecursiveFibonacci';
        node-link = {
          node-link-id = 'class_recursive_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Fibonacci';
        node-link = {
          node-link-id = 'class_fibonacci';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'RecursiveFibonacci';
        node-link = {
          node-link-id = 'class_recursive_fibonacci';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = '_fibonacci_8cs';
  file-name = 'Fibonacci.cs';
  file-full-name  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_8_n_e_t_core_app_00_version_0av6_80_8_assembly_attributes_8cs';
  file-name = '.NETCoreApp,Version=v6.0.AssemblyAttributes.cs';
  file-full-name  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fibonacci_8_assembly_info_8cs';
  file-name = 'fibonacci.AssemblyInfo.cs';
  file-full-name  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.AssemblyInfo.cs';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'fibonacci_8_global_usings_8g_8cs';
  file-name = 'fibonacci.GlobalUsings.g.cs';
  file-full-name  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_program_8cs';
  file-name = 'Program.cs';
  file-full-name  = 'E:/C#/UNI/fibonacci/Program.cs';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system';
    ns-name = 'global::System';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '2';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_collections_1_1_generic';
    ns-name = 'global::System::Collections::Generic';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '3';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_i_o';
    ns-name = 'global::System::IO';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '4';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_linq';
    ns-name = 'global::System::Linq';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '5';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_net_1_1_http';
    ns-name = 'global::System::Net::Http';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '6';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_threading';
    ns-name = 'global::System::Threading';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '7';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespaceglobal_1_1_system_1_1_threading_1_1_tasks';
    ns-name = 'global::System::Threading::Tasks';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/fibonacci.GlobalUsings.g.cs';
  ns-fileline  = '8';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespace_system';
    ns-name = 'System';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs';
  ns-fileline  = '2';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespace_system_1_1_diagnostics';
    ns-name = 'System::Diagnostics';
  ns-filename  = 'E:/C#/UNI/fibonacci/Fibonacci.cs';
  ns-fileline  = '1';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespace_system_1_1_reflection';
    ns-name = 'System::Reflection';
  ns-filename  = 'E:/C#/UNI/fibonacci/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs';
  ns-fileline  = '3';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
  namespace = {
    ns-id   = 'namespace_system_1_1_text';
    ns-name = 'System::Text';
  ns-filename  = 'E:/C#/UNI/fibonacci/Program.cs';
  ns-fileline  = '1';
  ns-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  ns-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  };
